async function fetchData() {
  const parameter = "T2M";

  // Fetch local JSON generated by nasa_fetch.py
  const response = await fetch("nasa_probability.json");
  const content = await response.json();

  // Convert JSON data to dataset
  const dataset = content.data.map(d => ({
    date: d3.timeParse("%Y-%m-%d")(d.date),
    value: +d.value
  }));

  // Draw charts
  drawLineChart(dataset, parameter);
  drawBoxPlot(dataset, parameter);
}

// === Draw line chart ===
function drawLineChart(dataset, parameter) {
  const width = 928;
  const height = 400;
  const margin = {top: 20, right: 30, bottom: 50, left: 50};

  const x = d3.scaleUtc()
    .domain(d3.extent(dataset, d => d.date))
    .range([margin.left, width - margin.right]);

  const y = d3.scaleLinear()
    .domain([0, d3.max(dataset, d => d.value)]).nice()
    .range([height - margin.bottom, margin.top]);

  const line = d3.line()
    .x(d => x(d.date))
    .y(d => y(d.value));

  const svg = d3.select("#linechart-container")
    .append("svg")
    .attr("width", width)
    .attr("height", height);

  // X axis
  svg.append("g")
    .attr("transform", `translate(0,${height - margin.bottom})`)
    .call(d3.axisBottom(x).ticks(dataset.length).tickFormat(d3.timeFormat("%Y")))
    .selectAll("text")
    .attr("transform", "rotate(-40)")
    .style("text-anchor", "end");

  // Y axis
  svg.append("g")
    .attr("transform", `translate(${margin.left},0)`)
    .call(d3.axisLeft(y))
    .call(g => g.select(".domain").remove());

  // Line path
  svg.append("path")
    .datum(dataset)
    .attr("fill", "none")
    .attr("stroke", "steelblue")
    .attr("stroke-width", 2)
    .attr("d", line);

  // Dots with tooltip
  const tooltip = d3.select("body").append("div")
    .attr("class", "tooltip");

  svg.selectAll("circle")
    .data(dataset)
    .enter()
    .append("circle")
      .attr("cx", d => x(d.date))
      .attr("cy", d => y(d.value))
      .attr("r", 4)
      .attr("fill", "steelblue")
      .on("mouseover", function(event, d) {
        tooltip.style("display", "block")
               .html(`<b>${d3.timeFormat("%Y-%m-%d")(d.date)}</b><br/>${d.value}`);
      })
      .on("mousemove", function(event) {
        tooltip.style("left", (event.pageX + 10) + "px")
               .style("top", (event.pageY - 20) + "px");
      })
      .on("mouseout", function() {
        tooltip.style("display", "none");
      });
}

fetchData();


